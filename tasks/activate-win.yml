# Copyright 2018, Trend Micro
#
# License as per [repo](master/LICENSE)
#
# *********************************************************************
# * Activate the Deep Security Agent (For Windows only)
# *********************************************************************
---
# *********************************************************************
# * Check if the DSA is installed properly
# *********************************************************************
- debug:
    msg: "Check if DSA installed properly."

- win_stat:
    path: "C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_query.cmd"
  register: dsaQuery

- fail:
    msg:
        - "Could not find command C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_query.cmd to query DSA certificate."
        - "Please make sure Deep Security Agent has been installed"
  when: dsaQuery.stat.exists != true

# *********************************************************************
# * Check if the DSA is already activated
# *********************************************************************
- debug:
    msg: "Check if DSA activated already."

- set_fact:
    isActivated: false

- win_shell: "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_query.cmd' -c GetAgentStatus agentCertHash"
  register: certHash

- set_fact:
    isActivated: true
  when: (certHash.stdout | regex_search('(D0:68:DE:48:1B:DC:4D:00:89:07:7F:85:15:20:C5:90:11:EB:56:6A)')) != "D0:68:DE:48:1B:DC:4D:00:89:07:7F:85:15:20:C5:90:11:EB:56:6A"

- set_fact:
    needsActivation: true
  when: checkActivated != true or force_reactivation != false

- debug:
    msg: "needsActivation: {{ needsActivation }}"

# *********************************************************************
# * Check if the DSA needs to use a proxy
# *********************************************************************
- debug:
    msg: "Check if the DSA needs to use a proxy."

- set_fact:
    useProxy: false

- set_fact:
    useProxy: true
  when: dsm_proxy != none and relay_proxy != none
  
- debug:
    msg: "useProxy: {{ useProxy }}"

# *********************************************************************
# * Construct dsa_control arguments
# *********************************************************************
- debug:
    msg: "Construct dsa_control arguments."

- set_fact:
    dsa_control_argument: "dsm://{{ dsm_agent_activation_hostname }}:{{ dsm_agent_activation_port }}/"

- set_fact:
    dsa_control_argument: "{{ dsa_control_argument }} 'tenantID:{{ tenant_id }}' 'token:{{ token }}'"
  when: tenant_id != none and token != none

- set_fact:
    dsa_control_argument: "{{ dsa_control_argument }} 'tenantID:{{ tenant_id }}' 'tenantPassword:{{ tenant_password }}'"
  when: tenant_id != none and tenant_password != none and token == none

- set_fact:
    dsa_control_argument: "{{ dsa_control_argument }} 'policyid:{{ policy_id }}'"
  when: policy_id != none

- set_fact:
    dsa_control_argument: "{{ dsa_control_argument }} 'policy:{{ policy_name }}'"
  when: policy_name != none

- set_fact:
    dsa_control_argument: "{{ dsa_control_argument }} 'groupid:{{ group_id }}'"
  when: group_id != none
  
  
- set_fact:
    dsm_proxy_argument: "dsm_proxy://{{ dsm_proxy }}:{{ dsm_proxy_port }}/"
  when: useProxy != none

- set_fact:
    relay_proxy_argument: "relay_proxy://{{ relay_proxy }}:{{ relay_proxy_port }}/"
  when: useProxy != none

# *********************************************************************
# * Activate DSA when it's not activated or forecd to reactivate
# *********************************************************************
- debug:
    msg:
        - "Activate DSA when it's not activated or forecd to reactivate."
        - "force_reactivation: {{ force_reactivation }}"

- win_shell: "{{ item }}"
  with_items:
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -r"
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -a {{ dsa_control_argument }}"
  when: needsActivation != false
  
# *********************************************************************
# * Activate DSA when it's not activated and a proxy is used
# *********************************************************************
- debug:
    msg:
     - "Activate DSA when it's not activated and a proxy is used."
     - "force_reactivation: {{ force_reactivation }}"
     - "needsActivation: {{ needsActivation }}"
     - "useProxy: {{ useProxy }}"

- shell: "{{ item }}"
  with_items:
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -r"
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -x {{ dsm_proxy_argument }}"
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -y {{ relay_proxy_argument }}"
    - "& 'C:\\Program Files\\Trend Micro\\Deep Security Agent\\dsa_control' -a {{ dsa_control_argument }}"
  when: needsActivation != false and useProxy != false
  become: true
